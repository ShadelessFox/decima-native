/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'HorizonForbiddenWest.exe'
*/

struct RTTICompound;
struct RTTIAttr;
struct RTTIContainer;
struct RTTIRefObject;
struct Ref;
struct RTTIBinaryReader_vtbl;
struct RTTIBinaryReader;

/* 418 */
struct __declspec(align(8)) RTTIContainerInfo
{
  const char *mTypeName;
  __int64 field_8;
  void *mConstructor;
  void *mDestructor;
  void *field_20;
  void *field_28;
  void *field_30;
  __int64 (__fastcall *mGetNumItems)(RTTIContainer *, __int64);
  void *field_40;
  void *field_48;
  void *field_50;
  void *field_58;
  void *field_60;
  void *field_68;
  void *field_70;
};

/* 422 */
enum RTTIKind : __int8
{
  RTTIKind_Primitive = 0x0,
  RTTIKind_Pointer = 0x1,
  RTTIKind_Container = 0x2,
  RTTIKind_Enum = 0x3,
  RTTIKind_Class = 0x4,
  RTTIKind_EnumFlags = 0x5,
  RTTIKind_POD = 0x6,
  RTTIKind_7 = 0x7,
};

/* 423 */
struct __unaligned __declspec(align(1)) RTTI
{
  int id;
  RTTIKind kind;
};

/* 429 */
struct __declspec(align(8)) RTTIContainer
{
  RTTI base;
  RTTI *mItemType;
  RTTIContainerInfo *mContainerType;
  const char *mTypeName;
};

/* 419 */
struct RTTIPointerInfo
{
  const char *mTypeName;
  _BYTE gap8[8];
  void *mConstructor;
  void *mDestructor;
  void *mGetter;
  char (__stdcall *mSetter)(RTTI *type, Ref *ref, RTTIRefObject *value);
  void *mCopier;
};

/* 516 */
struct Ref
{
  void *mPtr;
};

/* 497 */
struct RTTIObject
{
  void *vtbl;
};

/* 499 */
struct GGUUID
{
  __int64 mLow;
  __int64 mHigh;
};

/* 498 */
struct RTTIRefObject
{
  RTTIObject base;
  GGUUID UUID;
  __int64 mRefCount;
};

/* 420 */
struct __declspec(align(8)) RTTIBase
{
  RTTICompound *mType;
  __int64 mOffset;
};

/* 480 */
typedef unsigned __int16 uint16_t;

/* 424 */
struct __declspec(align(8)) RTTICompound
{
  RTTI base;
  char mFactoryFlags;
  char mNumBases;
  char mNumAttrs;
  char mNumMessageHandlers;
  int mVersion;
  int mSize;
  uint16_t mAlignment;
  __int16 mFlags;
  void *mConstructor;
  void *mDestructor;
  void *mFromString;
  __int64 field_30;
  void *mToString;
  const char *mTypeName;
  void *mPreviousType;
  RTTI *mNextType;
  RTTIBase *mBases;
  RTTIAttr *mAttrs;
  void *mMessageHandlers;
  __int64 field_70;
  void *mExportedSymbols;
  RTTI *mRepresentationType;
  void *mFunctions;
  __int64 field_90;
  __int64 field_98;
  void *mOnReadBinaryFn;
  int mVTableOffset;
  int field_AC;
};

/* 425 */
struct __declspec(align(8)) RTTIAttr
{
  RTTI *mType;
  __int16 mOffset;
  __int16 mFlags;
  int field_C;
  const char *mName;
  void *mPropertyGetter;
  void *mPropertySetter;
  __int64 field_24;
  __int64 field_2C;
};

/* 426 */
struct __declspec(align(8)) RTTIEnum
{
  RTTI base;
  _BYTE gap5[2];
  char mSize;
  __int16 mNumValues;
  const char *mTypeName;
  void *mValues;
  RTTI *mRepresentationType;
};

/* 427 */
struct __declspec(align(8)) RTTIValue
{
  __int64 mValue;
  const char *mName;
  const char *mAlias;
  const char *mAlias2;
  __int64 field_20;
  __int64 field_28;
};

/* 428 */
struct __declspec(align(8)) RTTIAtom
{
  RTTI base;
  __int64 field_8;
  const char *mTypeName;
  const RTTIAtom *mBaseType;
  void *mFromString;
  void *mToString;
  void *field_30;
  void (__fastcall *mAssign)(void *, void *);
  __int64 mEquals;
  void *mConstructor;
  void *mDestructor;
  void *mSwapEndianness;
  void *mTryAssign;
  void *mGetSizeInMemory;
  void *mCompareStrings;
  RTTI *mRepresentationType;
};

/* 430 */
struct __declspec(align(8)) RTTIPointer
{
  RTTI base;
  char mPresent;
  RTTI *mItemType;
  RTTIPointerInfo *mPointerType;
  const char *mName;
};

/* 433 */
struct RTTIMessageHandler
{
  RTTICompound *mMessage;
  void *mHandler;
};

/* 528 */
struct RTTICompound
{
  _BYTE base[8];
  unsigned __int8 num_message_handlers;
  unsigned __int8 unk_08[2];
  unsigned int version;
  unsigned int size;
  unsigned __int16 alignment;
  unsigned __int16 flags;
  unsigned __int64 constructor_fn;
  unsigned __int64 destructor_fn;
  unsigned __int64 from_string_fn;
  unsigned __int64 unk_30;
  unsigned __int64 to_string_fn;
  const char *type_name;
  RTTI *previous_type;
  RTTI *next_type;
  RTTIBase *bases;
  RTTIAttr *attrs;
  RTTIMessageHandler *message_handlers;
  unsigned __int64 unk_70;
  unsigned __int64 exported_symbols;
  RTTI *representation_type;
  unsigned __int64 unk_88;
  unsigned __int64 unk_90;
  unsigned __int64 unk_98;
  unsigned __int64 on_read_msg_binary_fn;
  unsigned int vtable_offset;
  unsigned int unk_AC;
};

/* 435 */
struct __declspec(align(8)) MsgReadBinary
{
  __int64 field_0;
  RTTIBinaryReader *mReader;
};

/* 434 */
struct __declspec(align(8)) RTTIBinaryReader
{
  RTTIBinaryReader_vtbl *vtbl;
  _BYTE gap8[4];
  _DWORD mBigEndian;
  __int64 field_10;
  __int64 field_18;
};

/* 421 */
struct __declspec(align(8)) RTTIBinaryReader_vtbl
{
  __int64 field_0;
  __int64 field_8;
  __int64 field_10;
  void (__fastcall *Read)(RTTIBinaryReader *this, void *dst, __int64 size);
  void (__fastcall *mSkip)(RTTIBinaryReader *, __int64);
  __int64 field_28;
  __int64 (__fastcall *Tell)(RTTIBinaryReader *);
};

